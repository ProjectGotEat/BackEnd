<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="javaeatsong.goteat.repository.ParticipantsMapper">

	<insert id="insert"
        parameterType="javaeatsong.goteat.model.Participants">
    	INSERT INTO participants (board_id, organizer_id, user_id)
    	SELECT #{boardId}, #{organizerId}, #{userId}
    	FROM boards
    	WHERE id = #{boardId} AND remain_headcnt > 0
	</insert>
  
    <select id="selectListByOrganizerId" resultType="Map">
        SELECT item_name, meeting_time, quantity, headcnt, scale, participant_id, content
        FROM
            (SELECT b.item_name, b.meeting_time, b.quantity, b.headcnt, b.scale, p.id as participant_id, m.content, m.created_at
             FROM participants p
                      JOIN boards b
                           ON b.id = p.board_id
                      LEFT JOIN messages m
                            ON m.participant_id = p.id
             WHERE p.organizer_id = #{uid}
               AND (p.is_success = 0 and p.is_failed = 0)) original_participant_message
        GROUP BY participant_id
        ORDER BY participant_id DESC;
    </select>

    <select id="selectListByUserId" resultType="Map">
        SELECT item_name, meeting_time, quantity, headcnt, scale, participant_id, content
        FROM
            (SELECT b.item_name, b.meeting_time, b.quantity, b.headcnt, b.scale, p.id as participant_id, m.content, m.created_at
             FROM participants p
                      JOIN boards b
                           ON b.id = p.board_id
                      LEFT JOIN messages m
                            ON m.participant_id = p.id
             WHERE p.user_id = #{uid}
               AND (p.is_success = 0 and p.is_failed = 0)) original_participant_message
        GROUP BY participant_id
        ORDER BY participant_id DESC;
    </select>

    <select id="selectListEndedByOrganizerUserId" resultType="Map">
        SELECT item_name, meeting_time, quantity, headcnt, scale, participant_id, content
        FROM
            (SELECT b.item_name, b.meeting_time, b.quantity, b.headcnt, b.scale, p.id as participant_id, m.content, m.created_at
             FROM participants p
                      JOIN boards b
                           ON b.id = p.board_id
                      LEFT JOIN messages m
                            ON m.participant_id = p.id
             WHERE (p.organizer_id = #{uid} OR p.user_id = #{uid})
               AND (p.is_success = 1 OR p.is_failed = 1)) original_participant_message
        GROUP BY participant_id
        ORDER BY participant_id DESC;
    </select>

    <select id="selectListMessages" resultType="Map">
        SELECT p.id, u.profile_name, u.image, m.content, m.created_at
        FROM participants p
            JOIN messages m
                ON m.participant_id = p.id
            JOIN users u
                ON u.id = m.sender_id
        WHERE p.id = #{pid}
            AND (m.sender_id = #{uid} OR m.receiver_id = #{uid})
        ORDER BY m.created_at;
    </select>
</mapper>