<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="javaeatsong.goteat.repository.ParticipantsMapper">

	  <insert id="insert"
  		  parameterType="javaeatsong.goteat.model.Participants">
	  	  INSERT INTO participants(board_id, organizer_id, user_id)
		    VALUES(#{boardId}, #{organizerId}, #{userId})
	  </insert>
  
    <select id="selectListByOrganizerId" resultType="Map">
        SELECT item_name, quantity, headcnt, scale, meeting_time, participant_id, content
        FROM
            (SELECT b.item_name, b.meeting_time, b.quantity, b.headcnt, b.scale,
                    m.participant_id, m.content,
                   ROW_NUMBER() OVER(PARTITION BY m.participant_id ORDER BY m.created_at DESC) AS date_rank
            FROM participants p
            JOIN messages m
                ON p.id = m.participant_id
            JOIN boards b
                ON p.board_id = b.id
            WHERE p.organizer_id = #{uid}
                AND (p.is_success = 0 and p.is_failed = 0) = false) organizer_boards
        WHERE date_rank = 1
        ORDER BY participant_id DESC;
    </select>

    <select id="selectListByUserId" resultType="Map">
        SELECT item_name, quantity, headcnt, scale, meeting_time, participant_id, content
        FROM
            (SELECT b.item_name, b.meeting_time, b.quantity, b.headcnt, b.scale,
                    m.participant_id, m.content,
                    ROW_NUMBER() OVER(PARTITION BY m.participant_id ORDER BY m.created_at DESC) AS date_rank
             FROM participants p
                      JOIN messages m
                           ON p.id = m.participant_id
                      JOIN boards b
                           ON p.board_id = b.id
             WHERE p.user_id = #{uid}
               AND (p.is_success = 0 AND p.is_failed = 0)) organizer_boards
        WHERE date_rank = 1
        ORDER BY participant_id DESC;
    </select>

    <select id="selectListEndedByOrganizerUserId" resultType="Map">
        SELECT item_name, quantity, headcnt, scale, meeting_time, participant_id, content
        FROM
            (SELECT b.item_name, b.meeting_time, b.quantity, b.headcnt, b.scale,
                    m.participant_id, m.content,
                    ROW_NUMBER() OVER(PARTITION BY m.participant_id ORDER BY m.created_at DESC) AS date_rank
             FROM participants p
                 JOIN messages m
                     ON p.id = m.participant_id
                 JOIN boards b
                     ON p.board_id = b.id
             WHERE (p.organizer_id = #{uid} OR p.user_id = #{uid})
               AND (p.is_success = 1 OR p.is_failed = 1)) participants_boards
        WHERE date_rank = 1
        ORDER BY participant_id DESC;
    </select>
</mapper>