<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="javaeatsong.goteat.repository.BoardsMapper">
	<select id="selectList" resultType="Map">
		SELECT	b.id,
				b.item_name,
        		b.quantity,
        		b.scale,
        		CAST(b.quantity / b.headcnt AS SIGNED INTEGER) AS each_quantity,
        		CAST(b.total_price / b.headcnt AS SIGNED INTEGER) AS each_price,
        		b.meeting_location,
        		b.headcnt,
        		(SELECT COUNT(*) FROM participants p WHERE p.board_id = b.id) AS participants_headcnt,
        		bc.content AS category,
        		b.is_finished,
        		IF(s.board_id IS NOT NULL, 1, 0) AS is_scraped,
        		b.item_image1
		FROM boards b
		JOIN board_categories bc ON b.category_id = bc.id
		LEFT JOIN scraps s ON b.id = s.board_id AND s.user_id = #{uid}
		WHERE b.item_name LIKE CONCAT('%', #{keyword}, '%')
		<if test="category != null and !category.isEmpty()">
      		AND b.category_id = #{category}
   		</if>
   		GROUP BY
				b.id,
				b.item_name,
				b.quantity,
				b.scale,
				each_quantity,
				each_price,
				b.meeting_location,
				b.headcnt,
				participants_headcnt,
				bc.content,
				b.is_finished,
				b.item_image1
		ORDER BY is_up DESC, b.id DESC;
	</select>
	
	<select id="selectDetail" resultType="Map">
        SELECT
            b.item_image1,
            b.item_image2,
            b.receipt_image,
            b.created_at,
            b.user_id AS organizerId,
            u.image AS user_image,
            u.profile_name AS user_nickname,
            u.rank AS user_rank,
            bc.content AS category,
            b.item_name,
            b.scale,
            CAST(b.quantity / b.headcnt AS SIGNED INTEGER) AS each_quantity,
            CAST(b.total_price / b.headcnt AS SIGNED INTEGER) AS each_price,
            b.meeting_location,
            b.meeting_time,
            b.latitude,
            b.longitude,
            b.is_finished,
            b.is_reusable,
            CASE
				WHEN EXISTS (
					SELECT 1
					FROM participants p
					WHERE p.board_id = b.id AND p.user_id = #{uid}
				) THEN 1
				ELSE 0
			END AS is_requested,
			CASE
				WHEN (SELECT COUNT(*) FROM participants p WHERE p.board_id = b.id) = b.headcnt THEN 1
				ELSE 0
			END AS is_full
        FROM boards b
        JOIN users u ON b.user_id = u.id
        JOIN board_categories bc ON b.category_id = bc.id
        WHERE b.id = #{id}
    </select>

	<select id="select" parameterType="int"
		resultType="javaeatsong.goteat.model.Boards">
		SELECT * FROM boards WHERE id = #{id};
	</select>

	<insert id="insert"
		parameterType="javaeatsong.goteat.model.Boards">
		INSERT INTO boards(user_id, category_id , item_name , headcnt ,
		remain_headcnt , quantity , scale , total_price , meeting_location ,
		meeting_time , is_up , item_image1 , item_image2 , receipt_image ,
		latitude , longitude , is_reusable)
		SELECT #{userId}, c.id, #{itemName}, #{headcnt}, #{remainHeadcnt},
           #{quantity}, #{scale}, #{totalPrice}, #{meetingLocation},
           #{meetingTime}, #{isUp}, #{itemImage1}, #{itemImage2},
           #{receiptImage}, #{latitude}, #{longitude}, #{isReusable}
   		FROM board_categories c
    	WHERE c.content = #{categoryId}
	</insert>
	
	<insert id="insertPointHistory" parameterType="javaeatsong.goteat.model.Boards">
    	INSERT INTO point_histories (user_id, change_point, change_reason)
    	VALUES (#{userId}, -30, '게시글 상단 고정(-30)')
	</insert>

	
	<update id="decrementRemainHeadcnt">
    UPDATE boards
    SET remain_headcnt = remain_headcnt - 1
    WHERE id = #{bid} AND remain_headcnt > 0
	</update>

	<select id="selectOverview" resultType="Map">
		SELECT b.item_name, b.quantity, b.headcnt, b.scale, b.meeting_location, b.meeting_time, p.id as participant_id
		FROM boards b
		JOIN participants p
			ON p.board_id = b.id
		WHERE p.id = #{pid};
	</select>
</mapper>